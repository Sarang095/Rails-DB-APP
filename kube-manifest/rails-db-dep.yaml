apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers: []
      containers:
        - name: postgres
          image: postgres:14.12
          ports:
            - name: postgres-port
              containerPort: 5432
          env:
            - name: POSTGRES_SHARED_BUFFERS
              value: "256MB"
            - name: POSTGRES_MAX_CONNECTIONS
              value: "200"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: dbpassword
                  name: postgres-secret
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
  ---
  apiVersion: batch/v1
  kind: Job
  metadata:
    name: postgres-init
  spec:
    template:
      spec:
        containers:
          - name: postgres-init
            image: postgres:14.12
            command: ["/bin/sh", "-c"]
            args:
              - |
                until psql -h localhost -U postgres -c '\l'; do
                    echo "Waiting for PostgreSQL to start..."
                    sleep 1
                done
                psql -h localhost -U postgres -c "CREATE DATABASE \"open-flights_development\";"
                psql -h localhost -U postgres -c "ALTER USER postgres WITH PASSWORD '${POSTGRES_PASSWORD}';"
        restartPolicy: Never
